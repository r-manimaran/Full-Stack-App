@page "/"
@using TodoApplication.Components
@using TodoApplication.Models
@using Blazored.LocalStorage
@inject ILocalStorageService localStorage

<PageTitle>Todo Application</PageTitle>

<div class="app-container @appTheme">
    <div class="hero">
        <div class="container">
            <TodoHeader AppTitle="ToDo"
            LightIcon="las la-sun"
            DarkIcon="las la-moon"
            ToggleState="ToggleTheme"/>

            <div class="body-container">
                <input type="text" placeholder="Create a new todo..."
                @bind="todoTitle"
                @bind:event="oninput"
                @onkeydown="AddTodo" />
                <div class="todo-container">
                    @if (!todos.Any())
                    {
                        <p class="no-tasks-text">
                            Start adding some tasks! ✅
                        </p>
                    }
                    else
                    {
                        @foreach (var todo in todos)
                        {
                            <TodoComponent Todo="todo" RemoveAnimation="@String.Empty" OnRemoveTodo="RemoveTodo"/>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Todo> todos = new List<Todo>();
    private string todoTitle = string.Empty;
    private string appTheme = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        appTheme = await localStorage.GetItemAsync<string>("appTheme") ?? "";
    }
    private void AddTodo(KeyboardEventArgs e)
    {
        if(e.Key == "Enter" && !string.IsNullOrWhiteSpace(todoTitle))
        {
            var newTodo = new Todo() { Title = todoTitle };
            todos.Add(newTodo);
            todoTitle = string.Empty;
        }
    }

    private void RemoveTodo(Todo todo)
    {
        todos.Remove(todo);
    }

    private async Task ToggleTheme(bool isDarkTheme)
    {
        appTheme = isDarkTheme ? "dark-theme" : "";
        await localStorage.SetItemAsync<string>("appTheme", appTheme);
    }
}



