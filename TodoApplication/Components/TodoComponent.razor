@using TodoApplication.Models
<div class="checkbox-wrapper add-task @RemoveAnimation">
    <div class="task-container" @onclick="CheckTask">
        <input type="checkbox" @bind="Todo.IsDone" />
        <label>
            <div class="tick-mark"></div>
        </label>
        <span class="task-title @StrikeoutClass">@Todo.Title</span>
    </div>
    <div class="icon-container">
        <i class="las la-times" @onclick="RemoveTodo"></i>
    </div>
</div>

@code {
    [Parameter]
    public Todo Todo { get; set; } = new();
    [Parameter]
    public EventCallback<Todo> OnRemoveTodo { get; set; }
    [Parameter]
    public EventCallback OnCheckTodo { get; set; }
    [Parameter]
    public string RemoveAnimation { get; set; } = string.Empty;
    private string StrikeoutClass => Todo.IsDone ? "strickeout-gradiend" : "";

    private void CheckTask()
    {
        this.Todo.IsDone = !this.Todo.IsDone;
        OnCheckTodo.InvokeAsync();
    }
    private async Task RemoveTodo()
    {
        this.RemoveAnimation = "remove-task";
        await Task.Delay(300);
        await OnRemoveTodo.InvokeAsync(this.Todo);
    }
}
